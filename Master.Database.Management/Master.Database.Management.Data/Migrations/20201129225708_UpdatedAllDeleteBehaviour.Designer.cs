// <auto-generated />
using System;
using Master.Database.Management.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Master.Database.Management.Data.Migrations
{
    [DbContext(typeof(MdmContext))]
    [Migration("20201129225708_UpdatedAllDeleteBehaviour")]
    partial class UpdatedAllDeleteBehaviour
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("FixCategories");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedByUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("CreatedTimestampUtc")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("DeletedByUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("DeletedTimestampUtc")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FixCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FixTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("LastAccessedTimestampUtc")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("SystemCostEstimate")
                        .HasColumnType("float");

                    b.Property<Guid?>("UpdatedByUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("UpdatedTimestampUtc")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("FixCategoryId");

                    b.HasIndex("FixTypeId");

                    b.ToTable("FixTemplates");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplateSegments.Value", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FixTemplateFieldValueFieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FixTemplateFieldValueValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("FixTemplateFieldValueFieldId", "FixTemplateFieldValueValueId");

                    b.ToTable("FixTemplateValue");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplateTag", b =>
                {
                    b.Property<Guid>("FixTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TagName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("FixTemplateId", "TagName");

                    b.ToTable("FixTemplateTags");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateFieldValue", b =>
                {
                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ValueId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FieldId", "ValueId");

                    b.ToTable("FixTemplateFieldValues");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateSectionField", b =>
                {
                    b.Property<Guid>("FixTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FixTemplateId", "SectionId", "FieldId");

                    b.HasIndex("SectionId")
                        .IsUnique();

                    b.ToTable("FixTemplateSectionFields");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Segments.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FixTemplateSectionFieldFieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FixTemplateSectionFieldFixTemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FixTemplateSectionFieldSectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("FixTemplateSectionFieldFixTemplateId", "FixTemplateSectionFieldSectionId", "FixTemplateSectionFieldFieldId");

                    b.ToTable("FixTemplateField");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Segments.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("FixTemplateSection");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("FixTypes");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplate", b =>
                {
                    b.HasOne("Master.Database.Management.Data.Models.FixCategory", "FixCategory")
                        .WithMany()
                        .HasForeignKey("FixCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Master.Database.Management.Data.Models.FixType", "FixType")
                        .WithMany()
                        .HasForeignKey("FixTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FixCategory");

                    b.Navigation("FixType");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplateSegments.Value", b =>
                {
                    b.HasOne("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateFieldValue", "FixTemplateFieldValue")
                        .WithMany("Values")
                        .HasForeignKey("FixTemplateFieldValueFieldId", "FixTemplateFieldValueValueId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("FixTemplateFieldValue");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplateTag", b =>
                {
                    b.HasOne("Master.Database.Management.Data.Models.FixTemplate", "FixTemplate")
                        .WithMany("FixTemplateTags")
                        .HasForeignKey("FixTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FixTemplate");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateFieldValue", b =>
                {
                    b.HasOne("Master.Database.Management.Data.Models.FixTemplates.Segments.Field", "Field")
                        .WithMany("FixTemplateFieldValues")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateSectionField", b =>
                {
                    b.HasOne("Master.Database.Management.Data.Models.FixTemplate", "FixTemplate")
                        .WithMany("FixTemplateSectionFields")
                        .HasForeignKey("FixTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Master.Database.Management.Data.Models.FixTemplates.Segments.Section", "Section")
                        .WithOne("FixTemplateSectionField")
                        .HasForeignKey("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateSectionField", "SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FixTemplate");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Segments.Field", b =>
                {
                    b.HasOne("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateSectionField", "FixTemplateSectionField")
                        .WithMany("Fields")
                        .HasForeignKey("FixTemplateSectionFieldFixTemplateId", "FixTemplateSectionFieldSectionId", "FixTemplateSectionFieldFieldId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("FixTemplateSectionField");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplate", b =>
                {
                    b.Navigation("FixTemplateSectionFields");

                    b.Navigation("FixTemplateTags");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateFieldValue", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Sections.FixTemplateSectionField", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Segments.Field", b =>
                {
                    b.Navigation("FixTemplateFieldValues");
                });

            modelBuilder.Entity("Master.Database.Management.Data.Models.FixTemplates.Segments.Section", b =>
                {
                    b.Navigation("FixTemplateSectionField");
                });
#pragma warning restore 612, 618
        }
    }
}
